<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4gAAAABJRU5ErkJggg==
</value>
  </data>
</root>